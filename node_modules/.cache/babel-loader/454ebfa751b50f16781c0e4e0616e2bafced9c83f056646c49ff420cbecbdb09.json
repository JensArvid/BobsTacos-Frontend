{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AZafar\\\\DotNet\\\\Project\\\\Mahmoud\\\\BobsTacos-Frontend\\\\src\\\\routes\\\\Favorite.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateWishlist = () => {\n  _s();\n  const [userId, setUserId] = useState('');\n  const [menuItemId, setMenuItemId] = useState('');\n  const [wishlist, setWishlist] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`https://localhost:7027/api/wishlist`, {\n        method: 'POST',\n        // Use POST method for creating and updating\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          menuItemId\n        })\n      });\n      return response;\n    } catch (error) {\n      console.error('Error creating wishlist:', error);\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"User ID\",\n        value: userId,\n        onChange: e => setUserId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Menu Item ID\",\n        value: menuItemId,\n        onChange: e => setMenuItemId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Wishlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), wishlist && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Wishlist Created Successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User ID: \", wishlist.userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Menu Item ID: \", wishlist.menuItems[0].id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Menu Item Name: \", wishlist.menuItems[0].name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateWishlist, \"RzK6xFsH0+Zr+nnfIezAqctrLKM=\");\n_c = CreateWishlist;\nexport default CreateWishlist;\nvar _c;\n$RefreshReg$(_c, \"CreateWishlist\");","map":{"version":3,"names":["React","useState","toast","jsxDEV","_jsxDEV","CreateWishlist","_s","userId","setUserId","menuItemId","setMenuItemId","wishlist","setWishlist","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","error","console","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","menuItems","id","name","_c","$RefreshReg$"],"sources":["C:/Users/AZafar/DotNet/Project/Mahmoud/BobsTacos-Frontend/src/routes/Favorite.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nconst CreateWishlist = () => {\r\n  const [userId, setUserId] = useState('');\r\n  const [menuItemId, setMenuItemId] = useState('');\r\n  const [wishlist, setWishlist] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n        const response = await fetch(`https://localhost:7027/api/wishlist`, {\r\n          method: 'POST', // Use POST method for creating and updating\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ userId, menuItemId }),\r\n        });\r\n  \r\n        return response;\r\n      } catch (error) {\r\n        console.error('Error creating wishlist:', error);\r\n        throw error;\r\n      }\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"User ID\"\r\n          value={userId}\r\n          onChange={(e) => setUserId(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Menu Item ID\"\r\n          value={menuItemId}\r\n          onChange={(e) => setMenuItemId(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Create Wishlist</button>\r\n      </form>\r\n\r\n      {wishlist && (\r\n        <div>\r\n          <h2>Wishlist Created Successfully</h2>\r\n          <p>User ID: {wishlist.userId}</p>\r\n          <p>Menu Item ID: {wishlist.menuItems[0].id}</p>\r\n          <p>Menu Item Name: {wishlist.menuItems[0].name}</p>\r\n          {/* Render other wishlist details here */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateWishlist;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoC,EAAE;QAClEC,MAAM,EAAE,MAAM;QAAE;QAChBC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEf,MAAM;UAAEE;QAAW,CAAC;MAC7C,CAAC,CAAC;MAEF,OAAOO,QAAQ;IACjB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACJ,CAAC;EACD,oBACEnB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAMsB,QAAQ,EAAEb,YAAa;MAAAY,QAAA,gBAC3BrB,OAAA;QACEuB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,SAAS;QACrBC,KAAK,EAAEtB,MAAO;QACduB,QAAQ,EAAGhB,CAAC,IAAKN,SAAS,CAACM,CAAC,CAACiB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACF/B,OAAA;QACEuB,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC,cAAc;QAC1BC,KAAK,EAAEpB,UAAW;QAClBqB,QAAQ,EAAGhB,CAAC,IAAKJ,aAAa,CAACI,CAAC,CAACiB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACF/B,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAe;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,EAENxB,QAAQ,iBACPP,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAI;MAA6B;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtC/B,OAAA;QAAAqB,QAAA,GAAG,WAAS,EAACd,QAAQ,CAACJ,MAAM;MAAA;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjC/B,OAAA;QAAAqB,QAAA,GAAG,gBAAc,EAACd,QAAQ,CAACyB,SAAS,CAAC,CAAC,CAAC,CAACC,EAAE;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/C/B,OAAA;QAAAqB,QAAA,GAAG,kBAAgB,EAACd,QAAQ,CAACyB,SAAS,CAAC,CAAC,CAAC,CAACE,IAAI;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC7B,EAAA,CApDID,cAAc;AAAAkC,EAAA,GAAdlC,cAAc;AAsDpB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}